{"language":"Java","type":"CompilationUnit","pid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":1},"end":{"line":1}}},"property":{"type":"Identifier","name":"owasp"},"loc":{"start":{"line":1},"end":{"line":1}}},"property":{"type":"Identifier","name":"webgoat"},"loc":{"start":{"line":1},"end":{"line":1}}},"property":{"type":"Identifier","name":"lessons"},"loc":{"start":{"line":1},"end":{"line":1}}},"annotations":[],"definitions":[{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":3},"end":{"line":3}}},"property":{"type":"Identifier","name":"sql"},"loc":{"start":{"line":3},"end":{"line":3}}},"property":{"type":"Identifier","name":"Connection"},"loc":{"start":{"line":3},"end":{"line":3}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":4},"end":{"line":4}}},"property":{"type":"Identifier","name":"sql"},"loc":{"start":{"line":4},"end":{"line":4}}},"property":{"type":"Identifier","name":"ResultSet"},"loc":{"start":{"line":4},"end":{"line":4}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":5},"end":{"line":5}}},"property":{"type":"Identifier","name":"sql"},"loc":{"start":{"line":5},"end":{"line":5}}},"property":{"type":"Identifier","name":"SQLException"},"loc":{"start":{"line":5},"end":{"line":5}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":6},"end":{"line":6}}},"property":{"type":"Identifier","name":"sql"},"loc":{"start":{"line":6},"end":{"line":6}}},"property":{"type":"Identifier","name":"Statement"},"loc":{"start":{"line":6},"end":{"line":6}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":7},"end":{"line":7}}},"property":{"type":"Identifier","name":"util"},"loc":{"start":{"line":7},"end":{"line":7}}},"property":{"type":"Identifier","name":"ArrayList"},"loc":{"start":{"line":7},"end":{"line":7}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":8},"end":{"line":8}}},"property":{"type":"Identifier","name":"util"},"loc":{"start":{"line":8},"end":{"line":8}}},"property":{"type":"Identifier","name":"List"},"loc":{"start":{"line":8},"end":{"line":8}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":10},"end":{"line":10}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":10},"end":{"line":10}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":10},"end":{"line":10}}},"property":{"type":"Identifier","name":"Element"},"loc":{"start":{"line":10},"end":{"line":10}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":11},"end":{"line":11}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":11},"end":{"line":11}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":11},"end":{"line":11}}},"property":{"type":"Identifier","name":"ElementContainer"},"loc":{"start":{"line":11},"end":{"line":11}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":12},"end":{"line":12}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":12},"end":{"line":12}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":12},"end":{"line":12}}},"property":{"type":"Identifier","name":"html"},"loc":{"start":{"line":12},"end":{"line":12}}},"property":{"type":"Identifier","name":"A"},"loc":{"start":{"line":12},"end":{"line":12}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":13},"end":{"line":13}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":13},"end":{"line":13}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":13},"end":{"line":13}}},"property":{"type":"Identifier","name":"html"},"loc":{"start":{"line":13},"end":{"line":13}}},"property":{"type":"Identifier","name":"IMG"},"loc":{"start":{"line":13},"end":{"line":13}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":14},"end":{"line":14}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":14},"end":{"line":14}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":14},"end":{"line":14}}},"property":{"type":"Identifier","name":"html"},"loc":{"start":{"line":14},"end":{"line":14}}},"property":{"type":"Identifier","name":"Input"},"loc":{"start":{"line":14},"end":{"line":14}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":15},"end":{"line":15}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":15},"end":{"line":15}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":15},"end":{"line":15}}},"property":{"type":"Identifier","name":"html"},"loc":{"start":{"line":15},"end":{"line":15}}},"property":{"type":"Identifier","name":"P"},"loc":{"start":{"line":15},"end":{"line":15}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":16},"end":{"line":16}}},"property":{"type":"Identifier","name":"owasp"},"loc":{"start":{"line":16},"end":{"line":16}}},"property":{"type":"Identifier","name":"webgoat"},"loc":{"start":{"line":16},"end":{"line":16}}},"property":{"type":"Identifier","name":"session"},"loc":{"start":{"line":16},"end":{"line":16}}},"property":{"type":"Identifier","name":"DatabaseUtilities"},"loc":{"start":{"line":16},"end":{"line":16}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":17},"end":{"line":17}}},"property":{"type":"Identifier","name":"owasp"},"loc":{"start":{"line":17},"end":{"line":17}}},"property":{"type":"Identifier","name":"webgoat"},"loc":{"start":{"line":17},"end":{"line":17}}},"property":{"type":"Identifier","name":"session"},"loc":{"start":{"line":17},"end":{"line":17}}},"property":{"type":"Identifier","name":"ECSFactory"},"loc":{"start":{"line":17},"end":{"line":17}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":18},"end":{"line":18}}},"property":{"type":"Identifier","name":"owasp"},"loc":{"start":{"line":18},"end":{"line":18}}},"property":{"type":"Identifier","name":"webgoat"},"loc":{"start":{"line":18},"end":{"line":18}}},"property":{"type":"Identifier","name":"session"},"loc":{"start":{"line":18},"end":{"line":18}}},"property":{"type":"Identifier","name":"WebSession"},"loc":{"start":{"line":18},"end":{"line":18}}}},{"type":"ClassDeclaration","id":{"type":"Identifier","name":"BlindNumericSqlInjection"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"extending":{"type":"Identifier","name":"LessonAdapter","loc":{"start":{"line":54},"end":{"line":54}}},"definitions":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"MANDIANT_LOGO","vartype":{"type":"Identifier","name":"A","loc":{"start":{"line":57},"end":{"line":57}}}},"modifiers":{"type":"Modifiers","modifiers":["public","static","final"],"annotations":[]},"vartype":{"type":"Identifier","name":"A","loc":{"start":{"line":57},"end":{"line":57}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"A","loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setHref"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":"http://www.mandiant.com","raw":"http://www.mandiant.com"}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"IMG","loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":"images/logos/mandiant.png","raw":"images/logos/mandiant.png"}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setAlt"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":"MANDIANT","raw":"MANDIANT"}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setBorder"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":0,"raw":0}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setHspace"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":0,"raw":0}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setVspace"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":0,"raw":0}],"loc":{"start":{"line":57},"end":{"line":57}}}],"loc":{"start":{"line":57},"end":{"line":57}}},"loc":{"start":{"line":57},"end":{"line":57}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"ACCT_NUM","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":59},"end":{"line":59}}}},"modifiers":{"type":"Modifiers","modifiers":["private","static","final"],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":59},"end":{"line":59}}},"init":{"type":"Literal","value":"account_number","raw":"account_number"},"loc":{"start":{"line":59},"end":{"line":59}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"TARGET_CC_NUM","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":61},"end":{"line":61}}}},"modifiers":{"type":"Modifiers","modifiers":["private","static","final"],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":61},"end":{"line":61}}},"init":{"type":"Literal","value":"1111222233334444","raw":"1111222233334444"},"loc":{"start":{"line":61},"end":{"line":61}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"createContent"},"modifiers":{"type":"Modifiers","modifiers":["protected"],"annotations":[]},"restype":{"type":"Identifier","name":"Element","loc":{"start":{"line":70},"end":{"line":70}}},"typarams":[],"params":[{"type":"Identifier","name":"s","vartype":{"type":"Identifier","name":"WebSession","loc":{"start":{"line":70},"end":{"line":70}}}}],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"ec","vartype":{"type":"Identifier","name":"ElementContainer","loc":{"start":{"line":72},"end":{"line":72}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"ElementContainer","loc":{"start":{"line":72},"end":{"line":72}}},"init":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"ElementContainer","loc":{"start":{"line":72},"end":{"line":72}}},"arguments":[],"loc":{"start":{"line":72},"end":{"line":72}}},"loc":{"start":{"line":72},"end":{"line":72}}},{"type":"TryStatement","handlers":[{"type":"CatchClause","param":{"type":"Identifier","name":"e","vartype":{"type":"Identifier","name":"Exception","loc":{"start":{"line":130},"end":{"line":130}}}},"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"s","loc":{"start":{"line":132},"end":{"line":132}}},"property":{"type":"Identifier","name":"setMessage"},"loc":{"start":{"line":132},"end":{"line":132}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Error generating ","raw":"Error generating "},"right":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"ThisExpression"},"property":{"type":"Identifier","name":"getClass"},"loc":{"start":{"line":132},"end":{"line":132}}},"arguments":[],"loc":{"start":{"line":132},"end":{"line":132}}},"property":{"type":"Identifier","name":"getName"},"loc":{"start":{"line":132},"end":{"line":132}}},"arguments":[],"loc":{"start":{"line":132},"end":{"line":132}}},"loc":{"start":{"line":132},"end":{"line":132}}}],"loc":{"start":{"line":132},"end":{"line":132}}},"loc":{"start":{"line":132},"end":{"line":132}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"e","loc":{"start":{"line":133},"end":{"line":133}}},"property":{"type":"Identifier","name":"printStackTrace"},"loc":{"start":{"line":133},"end":{"line":133}}},"arguments":[],"loc":{"start":{"line":133},"end":{"line":133}}},"loc":{"start":{"line":133},"end":{"line":133}}}],"loc":{"start":{"line":131},"end":{"line":134}}},"loc":{"start":{"line":130},"end":{"line":134}}}],"block":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"connection","vartype":{"type":"Identifier","name":"Connection","loc":{"start":{"line":76},"end":{"line":76}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Connection","loc":{"start":{"line":76},"end":{"line":76}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"DatabaseUtilities","loc":{"start":{"line":76},"end":{"line":76}}},"property":{"type":"Identifier","name":"getConnection"},"loc":{"start":{"line":76},"end":{"line":76}}},"arguments":[{"type":"Identifier","name":"s","loc":{"start":{"line":76},"end":{"line":76}}}],"loc":{"start":{"line":76},"end":{"line":76}}},"loc":{"start":{"line":76},"end":{"line":76}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":78},"end":{"line":78}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":78},"end":{"line":78}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"P","loc":{"start":{"line":78},"end":{"line":78}}},"arguments":[],"loc":{"start":{"line":78},"end":{"line":78}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":78},"end":{"line":78}}},"arguments":[{"type":"Literal","value":"Enter your Account Number: ","raw":"Enter your Account Number: "}],"loc":{"start":{"line":78},"end":{"line":78}}}],"loc":{"start":{"line":78},"end":{"line":78}}},"loc":{"start":{"line":78},"end":{"line":78}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"accountNumber","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":80},"end":{"line":80}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":80},"end":{"line":80}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"s","loc":{"start":{"line":80},"end":{"line":80}}},"property":{"type":"Identifier","name":"getParser"},"loc":{"start":{"line":80},"end":{"line":80}}},"arguments":[],"loc":{"start":{"line":80},"end":{"line":80}}},"property":{"type":"Identifier","name":"getRawParameter"},"loc":{"start":{"line":80},"end":{"line":80}}},"arguments":[{"type":"Identifier","name":"ACCT_NUM","loc":{"start":{"line":80},"end":{"line":80}}},{"type":"Literal","value":"101","raw":"101"}],"loc":{"start":{"line":80},"end":{"line":80}}},"loc":{"start":{"line":80},"end":{"line":80}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"input","vartype":{"type":"Identifier","name":"Input","loc":{"start":{"line":81},"end":{"line":81}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Input","loc":{"start":{"line":81},"end":{"line":81}}},"init":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"Input","loc":{"start":{"line":81},"end":{"line":81}}},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"Input","loc":{"start":{"line":81},"end":{"line":81}}},"property":{"type":"Identifier","name":"TEXT"},"loc":{"start":{"line":81},"end":{"line":81}}},{"type":"Identifier","name":"ACCT_NUM","loc":{"start":{"line":81},"end":{"line":81}}},{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"accountNumber","loc":{"start":{"line":81},"end":{"line":81}}},"property":{"type":"Identifier","name":"toString"},"loc":{"start":{"line":81},"end":{"line":81}}},"arguments":[],"loc":{"start":{"line":81},"end":{"line":81}}}],"loc":{"start":{"line":81},"end":{"line":81}}},"loc":{"start":{"line":81},"end":{"line":81}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":82},"end":{"line":82}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":82},"end":{"line":82}}},"arguments":[{"type":"Identifier","name":"input","loc":{"start":{"line":82},"end":{"line":82}}}],"loc":{"start":{"line":82},"end":{"line":82}}},"loc":{"start":{"line":82},"end":{"line":82}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"b","vartype":{"type":"Identifier","name":"Element","loc":{"start":{"line":84},"end":{"line":84}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Element","loc":{"start":{"line":84},"end":{"line":84}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ECSFactory","loc":{"start":{"line":84},"end":{"line":84}}},"property":{"type":"Identifier","name":"makeButton"},"loc":{"start":{"line":84},"end":{"line":84}}},"arguments":[{"type":"Literal","value":"Go!","raw":"Go!"}],"loc":{"start":{"line":84},"end":{"line":84}}},"loc":{"start":{"line":84},"end":{"line":84}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":85},"end":{"line":85}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":85},"end":{"line":85}}},"arguments":[{"type":"Identifier","name":"b","loc":{"start":{"line":85},"end":{"line":85}}}],"loc":{"start":{"line":85},"end":{"line":85}}},"loc":{"start":{"line":85},"end":{"line":85}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"query","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":87},"end":{"line":87}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":87},"end":{"line":87}}},"init":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"SELECT * FROM user_data WHERE userid \u003d ","raw":"SELECT * FROM user_data WHERE userid \u003d "},"right":{"type":"Identifier","name":"accountNumber","loc":{"start":{"line":87},"end":{"line":87}}},"loc":{"start":{"line":87},"end":{"line":87}}},"loc":{"start":{"line":87},"end":{"line":87}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"answer_query","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":88},"end":{"line":88}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":88},"end":{"line":88}}},"loc":{"start":{"line":88},"end":{"line":88}}},{"type":"ExpressionStatement","expression":{"type":"AssignmentExpression","left":{"type":"Identifier","name":"answer_query","loc":{"start":{"line":95},"end":{"line":95}}},"right":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"SELECT pin FROM pins WHERE cc_number \u003d \u0027","raw":"SELECT pin FROM pins WHERE cc_number \u003d \u0027"},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":95},"end":{"line":95}}},"loc":{"start":{"line":95},"end":{"line":95}}},"right":{"type":"Literal","value":"\u0027","raw":"\u0027"},"loc":{"start":{"line":95},"end":{"line":95}}},"loc":{"start":{"line":95},"end":{"line":95}}},"loc":{"start":{"line":95},"end":{"line":95}}},{"type":"TryStatement","handlers":[{"type":"CatchClause","param":{"type":"Identifier","name":"sqle","vartype":{"type":"Identifier","name":"SQLException","loc":{"start":{"line":125},"end":{"line":125}}}},"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":127},"end":{"line":127}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":127},"end":{"line":127}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"P","loc":{"start":{"line":127},"end":{"line":127}}},"arguments":[],"loc":{"start":{"line":127},"end":{"line":127}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":127},"end":{"line":127}}},"arguments":[{"type":"Literal","value":"An error occurred, please try again.","raw":"An error occurred, please try again."}],"loc":{"start":{"line":127},"end":{"line":127}}}],"loc":{"start":{"line":127},"end":{"line":127}}},"loc":{"start":{"line":127},"end":{"line":127}}}],"loc":{"start":{"line":126},"end":{"line":128}}},"loc":{"start":{"line":125},"end":{"line":128}}}],"block":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"answer_statement","vartype":{"type":"Identifier","name":"Statement","loc":{"start":{"line":100},"end":{"line":100}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Statement","loc":{"start":{"line":100},"end":{"line":100}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"connection","loc":{"start":{"line":100},"end":{"line":100}}},"property":{"type":"Identifier","name":"createStatement"},"loc":{"start":{"line":100},"end":{"line":100}}},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":101},"end":{"line":101}}},"property":{"type":"Identifier","name":"TYPE_SCROLL_INSENSITIVE"},"loc":{"start":{"line":101},"end":{"line":101}}},{"type":"MemberExpression","object":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":101},"end":{"line":101}}},"property":{"type":"Identifier","name":"CONCUR_READ_ONLY"},"loc":{"start":{"line":101},"end":{"line":101}}}],"loc":{"start":{"line":100},"end":{"line":101}}},"loc":{"start":{"line":100},"end":{"line":101}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"answer_results","vartype":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":102},"end":{"line":102}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":102},"end":{"line":102}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"answer_statement","loc":{"start":{"line":102},"end":{"line":102}}},"property":{"type":"Identifier","name":"executeQuery"},"loc":{"start":{"line":102},"end":{"line":102}}},"arguments":[{"type":"Identifier","name":"answer_query","loc":{"start":{"line":102},"end":{"line":102}}}],"loc":{"start":{"line":102},"end":{"line":102}}},"loc":{"start":{"line":102},"end":{"line":102}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"answer_results","loc":{"start":{"line":103},"end":{"line":103}}},"property":{"type":"Identifier","name":"first"},"loc":{"start":{"line":103},"end":{"line":103}}},"arguments":[],"loc":{"start":{"line":103},"end":{"line":103}}},"loc":{"start":{"line":103},"end":{"line":103}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"System","loc":{"start":{"line":104},"end":{"line":104}}},"property":{"type":"Identifier","name":"out"},"loc":{"start":{"line":104},"end":{"line":104}}},"property":{"type":"Identifier","name":"println"},"loc":{"start":{"line":104},"end":{"line":104}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Account: ","raw":"Account: "},"right":{"type":"Identifier","name":"accountNumber","loc":{"start":{"line":104},"end":{"line":104}}},"loc":{"start":{"line":104},"end":{"line":104}}}],"loc":{"start":{"line":104},"end":{"line":104}}},"loc":{"start":{"line":104},"end":{"line":104}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"System","loc":{"start":{"line":105},"end":{"line":105}}},"property":{"type":"Identifier","name":"out"},"loc":{"start":{"line":105},"end":{"line":105}}},"property":{"type":"Identifier","name":"println"},"loc":{"start":{"line":105},"end":{"line":105}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Answer : ","raw":"Answer : "},"right":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"answer_results","loc":{"start":{"line":105},"end":{"line":105}}},"property":{"type":"Identifier","name":"getString"},"loc":{"start":{"line":105},"end":{"line":105}}},"arguments":[{"type":"Literal","value":1,"raw":1}],"loc":{"start":{"line":105},"end":{"line":105}}},"loc":{"start":{"line":105},"end":{"line":105}}}],"loc":{"start":{"line":105},"end":{"line":105}}},"loc":{"start":{"line":105},"end":{"line":105}}},{"type":"IfStatement","test":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"accountNumber","loc":{"start":{"line":106},"end":{"line":106}}},"property":{"type":"Identifier","name":"toString"},"loc":{"start":{"line":106},"end":{"line":106}}},"arguments":[],"loc":{"start":{"line":106},"end":{"line":106}}},"property":{"type":"Identifier","name":"equals"},"loc":{"start":{"line":106},"end":{"line":106}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"answer_results","loc":{"start":{"line":106},"end":{"line":106}}},"property":{"type":"Identifier","name":"getString"},"loc":{"start":{"line":106},"end":{"line":106}}},"arguments":[{"type":"Literal","value":1,"raw":1}],"loc":{"start":{"line":106},"end":{"line":106}}}],"loc":{"start":{"line":106},"end":{"line":106}}},"consequent":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"Identifier","name":"makeSuccess","loc":{"start":{"line":108},"end":{"line":108}}},"arguments":[{"type":"Identifier","name":"s","loc":{"start":{"line":108},"end":{"line":108}}}],"loc":{"start":{"line":108},"end":{"line":108}}},"loc":{"start":{"line":108},"end":{"line":108}}}],"loc":{"start":{"line":107},"end":{"line":109}}},"alternate":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"statement","vartype":{"type":"Identifier","name":"Statement","loc":{"start":{"line":112},"end":{"line":112}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Statement","loc":{"start":{"line":112},"end":{"line":112}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"connection","loc":{"start":{"line":112},"end":{"line":112}}},"property":{"type":"Identifier","name":"createStatement"},"loc":{"start":{"line":112},"end":{"line":112}}},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":113},"end":{"line":113}}},"property":{"type":"Identifier","name":"TYPE_SCROLL_INSENSITIVE"},"loc":{"start":{"line":113},"end":{"line":113}}},{"type":"MemberExpression","object":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":113},"end":{"line":113}}},"property":{"type":"Identifier","name":"CONCUR_READ_ONLY"},"loc":{"start":{"line":113},"end":{"line":113}}}],"loc":{"start":{"line":112},"end":{"line":113}}},"loc":{"start":{"line":112},"end":{"line":113}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"results","vartype":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":114},"end":{"line":114}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":114},"end":{"line":114}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"statement","loc":{"start":{"line":114},"end":{"line":114}}},"property":{"type":"Identifier","name":"executeQuery"},"loc":{"start":{"line":114},"end":{"line":114}}},"arguments":[{"type":"Identifier","name":"query","loc":{"start":{"line":114},"end":{"line":114}}}],"loc":{"start":{"line":114},"end":{"line":114}}},"loc":{"start":{"line":114},"end":{"line":114}}},{"type":"IfStatement","test":{"type":"BinaryExpression","operator":"CONDITIONAL_AND","left":{"type":"BinaryExpression","operator":"NOT_EQUAL_TO","left":{"type":"Identifier","name":"results","loc":{"start":{"line":116},"end":{"line":116}}},"right":{"type":"Literal"},"loc":{"start":{"line":116},"end":{"line":116}}},"right":{"type":"BinaryExpression","operator":"EQUAL_TO","left":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"results","loc":{"start":{"line":116},"end":{"line":116}}},"property":{"type":"Identifier","name":"first"},"loc":{"start":{"line":116},"end":{"line":116}}},"arguments":[],"loc":{"start":{"line":116},"end":{"line":116}}},"right":{"type":"Literal","value":1,"raw":1},"loc":{"start":{"line":116},"end":{"line":116}}},"loc":{"start":{"line":116},"end":{"line":116}}},"consequent":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":118},"end":{"line":118}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":118},"end":{"line":118}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"P","loc":{"start":{"line":118},"end":{"line":118}}},"arguments":[],"loc":{"start":{"line":118},"end":{"line":118}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":118},"end":{"line":118}}},"arguments":[{"type":"Literal","value":"Account number is valid.","raw":"Account number is valid."}],"loc":{"start":{"line":118},"end":{"line":118}}}],"loc":{"start":{"line":118},"end":{"line":118}}},"loc":{"start":{"line":118},"end":{"line":118}}}],"loc":{"start":{"line":117},"end":{"line":119}}},"alternate":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":121},"end":{"line":121}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":121},"end":{"line":121}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"P","loc":{"start":{"line":121},"end":{"line":121}}},"arguments":[],"loc":{"start":{"line":121},"end":{"line":121}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":121},"end":{"line":121}}},"arguments":[{"type":"Literal","value":"Invalid account number.","raw":"Invalid account number."}],"loc":{"start":{"line":121},"end":{"line":121}}}],"loc":{"start":{"line":121},"end":{"line":121}}},"loc":{"start":{"line":121},"end":{"line":121}}}],"loc":{"start":{"line":120},"end":{"line":122}}},"loc":{"start":{"line":116},"end":{"line":122}}}],"loc":{"start":{"line":110},"end":{"line":123}}},"loc":{"start":{"line":106},"end":{"line":123}}}],"loc":{"start":{"line":99},"end":{"line":124}}},"loc":{"start":{"line":98},"end":{"line":128}}}],"loc":{"start":{"line":75},"end":{"line":129}}},"loc":{"start":{"line":74},"end":{"line":134}}},{"type":"ReturnStatement","argument":{"type":"Identifier","name":"ec","loc":{"start":{"line":136},"end":{"line":136}}},"loc":{"start":{"line":136},"end":{"line":136}}}],"loc":{"start":{"line":71},"end":{"line":137}}},"code":"\nprotected Element createContent(WebSession s) {\n    ElementContainer ec \u003d new ElementContainer();\n    try {\n        Connection connection \u003d DatabaseUtilities.getConnection(s);\n        ec.addElement(new P().addElement(\"Enter your Account Number: \"));\n        String accountNumber \u003d s.getParser().getRawParameter(ACCT_NUM, \"101\");\n        Input input \u003d new Input(Input.TEXT, ACCT_NUM, accountNumber.toString());\n        ec.addElement(input);\n        Element b \u003d ECSFactory.makeButton(\"Go!\");\n        ec.addElement(b);\n        String query \u003d \"SELECT * FROM user_data WHERE userid \u003d \" + accountNumber;\n        String answer_query;\n        answer_query \u003d \"SELECT pin FROM pins WHERE cc_number \u003d \\\u0027\" + TARGET_CC_NUM + \"\\\u0027\";\n        try {\n            Statement answer_statement \u003d connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n            ResultSet answer_results \u003d answer_statement.executeQuery(answer_query);\n            answer_results.first();\n            System.out.println(\"Account: \" + accountNumber);\n            System.out.println(\"Answer : \" + answer_results.getString(1));\n            if (accountNumber.toString().equals(answer_results.getString(1))) {\n                makeSuccess(s);\n            } else {\n                Statement statement \u003d connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n                ResultSet results \u003d statement.executeQuery(query);\n                if ((results !\u003d null) \u0026\u0026 (results.first() \u003d\u003d true)) {\n                    ec.addElement(new P().addElement(\"Account number is valid.\"));\n                } else {\n                    ec.addElement(new P().addElement(\"Invalid account number.\"));\n                }\n            }\n        } catch (SQLException sqle) {\n            ec.addElement(new P().addElement(\"An error occurred, please try again.\"));\n        }\n    } catch (Exception e) {\n        s.setMessage(\"Error generating \" + this.getClass().getName());\n        e.printStackTrace();\n    }\n    return (ec);\n}","loc":{"start":{"line":70},"end":{"line":137}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getDefaultCategory"},"modifiers":{"type":"Modifiers","modifiers":["protected"],"annotations":[]},"restype":{"type":"Identifier","name":"Category","loc":{"start":{"line":144},"end":{"line":144}}},"typarams":[],"params":[],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"ReturnStatement","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"Category","loc":{"start":{"line":146},"end":{"line":146}}},"property":{"type":"Identifier","name":"INJECTION"},"loc":{"start":{"line":146},"end":{"line":146}}},"loc":{"start":{"line":146},"end":{"line":146}}}],"loc":{"start":{"line":145},"end":{"line":147}}},"code":"\nprotected Category getDefaultCategory() {\n    return Category.INJECTION;\n}","loc":{"start":{"line":144},"end":{"line":147}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getCredits"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"restype":{"type":"Identifier","name":"Element","loc":{"start":{"line":154},"end":{"line":154}}},"typarams":[],"params":[],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"ReturnStatement","argument":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"super","loc":{"start":{"line":156},"end":{"line":156}}},"property":{"type":"Identifier","name":"getCustomCredits"},"loc":{"start":{"line":156},"end":{"line":156}}},"arguments":[{"type":"Literal","value":"Created by Chuck Willis\u0026nbsp;","raw":"Created by Chuck Willis\u0026nbsp;"},{"type":"Identifier","name":"MANDIANT_LOGO","loc":{"start":{"line":156},"end":{"line":156}}}],"loc":{"start":{"line":156},"end":{"line":156}}},"loc":{"start":{"line":156},"end":{"line":156}}}],"loc":{"start":{"line":155},"end":{"line":157}}},"code":"\npublic Element getCredits() {\n    return super.getCustomCredits(\"Created by Chuck Willis\u0026nbsp;\", MANDIANT_LOGO);\n}","loc":{"start":{"line":154},"end":{"line":157}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getHints"},"modifiers":{"type":"Modifiers","modifiers":["protected"],"annotations":[]},"restype":{"type":"Identifier","name":"List","loc":{"start":{"line":164},"end":{"line":164}}},"typarams":[],"params":[{"type":"Identifier","name":"s","vartype":{"type":"Identifier","name":"WebSession","loc":{"start":{"line":164},"end":{"line":164}}}}],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"hints","vartype":{"type":"Identifier","name":"List","loc":{"start":{"line":166},"end":{"line":166}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"List","loc":{"start":{"line":166},"end":{"line":166}}},"init":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"ArrayList","loc":{"start":{"line":166},"end":{"line":166}}},"arguments":[],"loc":{"start":{"line":166},"end":{"line":166}}},"loc":{"start":{"line":166},"end":{"line":166}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":169},"end":{"line":169}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":169},"end":{"line":170}}},"arguments":[{"type":"Literal","value":"Compound SQL statements can be made by joining multiple tests with keywords like AND and OR. Create a SQL statement that you can use as a true/false test and then start narrowing down the number using \u003e and \u003c\u003cbr\u003e\u003cbr\u003eThe backend database is HSQLDB, but this shouldn\u0027t make any difference because you can solve this lesson with standard SQL syntax.","raw":"Compound SQL statements can be made by joining multiple tests with keywords like AND and OR. Create a SQL statement that you can use as a true/false test and then start narrowing down the number using \u003e and \u003c\u003cbr\u003e\u003cbr\u003eThe backend database is HSQLDB, but this shouldn\u0027t make any difference because you can solve this lesson with standard SQL syntax."}],"loc":{"start":{"line":169},"end":{"line":174}}},"loc":{"start":{"line":169},"end":{"line":174}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":176},"end":{"line":176}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":176},"end":{"line":177}}},"arguments":[{"type":"Literal","value":"The application is taking your input and inserting it at the end of a pre-formed SQL command. You will need to make use of the following SQL functions: \u003cbr\u003e\u003cbr\u003eAND - combine the logic of the normal query with a boolean result\u003cbr\u003e\u003cbr\u003e( and ) - group subexpressions so they evaluate properly\u003cbr\u003e\u003cbr\u003eSELECT - make a subquery for your target data and get a number\u003cbr\u003e\u003cbr\u003e\u0026gt and \u003d and \u0026lt - once you have the number, compare it to a choosen one","raw":"The application is taking your input and inserting it at the end of a pre-formed SQL command. You will need to make use of the following SQL functions: \u003cbr\u003e\u003cbr\u003eAND - combine the logic of the normal query with a boolean result\u003cbr\u003e\u003cbr\u003e( and ) - group subexpressions so they evaluate properly\u003cbr\u003e\u003cbr\u003eSELECT - make a subquery for your target data and get a number\u003cbr\u003e\u003cbr\u003e\u0026gt and \u003d and \u0026lt - once you have the number, compare it to a choosen one"}],"loc":{"start":{"line":176},"end":{"line":182}}},"loc":{"start":{"line":176},"end":{"line":182}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":184},"end":{"line":184}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":184},"end":{"line":184}}},"arguments":[{"type":"Literal","value":"This is the code for the query being built and issued by WebGoat:\u003cbr\u003e\u003cbr\u003e \"SELECT * FROM user_data WHERE userid \u003d \" + accountNumber ","raw":"This is the code for the query being built and issued by WebGoat:\u003cbr\u003e\u003cbr\u003e \"SELECT * FROM user_data WHERE userid \u003d \" + accountNumber "}],"loc":{"start":{"line":184},"end":{"line":185}}},"loc":{"start":{"line":184},"end":{"line":185}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":186},"end":{"line":186}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":186},"end":{"line":187}}},"arguments":[{"type":"Literal","value":"Here is an example for another table:\u003cbr\u003e\u003cbr\u003e In the table \u003ci\u003euser_data\u003c/i\u003e, is the \u003ci\u003euserid\u003c/i\u003e for the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e333498703333\u003c/i\u003e greater than 100? \u003cbr\u003e\u003cbr\u003e101 AND ((SELECT userid FROM user_data WHERE cc_number\u003d\u0027333498703333\u0027) \u0026gt 100 ); \u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is invalid then answer is no.","raw":"Here is an example for another table:\u003cbr\u003e\u003cbr\u003e In the table \u003ci\u003euser_data\u003c/i\u003e, is the \u003ci\u003euserid\u003c/i\u003e for the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e333498703333\u003c/i\u003e greater than 100? \u003cbr\u003e\u003cbr\u003e101 AND ((SELECT userid FROM user_data WHERE cc_number\u003d\u0027333498703333\u0027) \u0026gt 100 ); \u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is invalid then answer is no."}],"loc":{"start":{"line":186},"end":{"line":195}}},"loc":{"start":{"line":186},"end":{"line":195}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":196},"end":{"line":196}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":196},"end":{"line":197}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Partial Solution:","raw":"Partial Solution:"},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIs the \u003ci\u003epin\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e","raw":"\u003cbr\u003e\u003cbr\u003eIs the \u003ci\u003epin\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e"},"loc":{"start":{"line":197},"end":{"line":198}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":199},"end":{"line":199}}},"loc":{"start":{"line":197},"end":{"line":199}}},"right":{"type":"Literal","value":"\u003c/i\u003e greater than 1000? ","raw":"\u003c/i\u003e greater than 1000? "},"loc":{"start":{"line":197},"end":{"line":200}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003e101 AND ((SELECT pin FROM pins WHERE cc_number\u003d\u0027","raw":"\u003cbr\u003e\u003cbr\u003e101 AND ((SELECT pin FROM pins WHERE cc_number\u003d\u0027"},"loc":{"start":{"line":197},"end":{"line":201}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":202},"end":{"line":202}}},"loc":{"start":{"line":197},"end":{"line":202}}},"right":{"type":"Literal","value":"\u0027) \u0026gt 1000 ); ","raw":"\u0027) \u0026gt 1000 ); "},"loc":{"start":{"line":197},"end":{"line":203}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is ","raw":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is "},"loc":{"start":{"line":197},"end":{"line":204}}},"right":{"type":"Literal","value":"invalid then answer is no.","raw":"invalid then answer is no."},"loc":{"start":{"line":197},"end":{"line":205}}}],"loc":{"start":{"line":196},"end":{"line":205}}},"loc":{"start":{"line":196},"end":{"line":205}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":206},"end":{"line":206}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":206},"end":{"line":207}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Another Part of Solution:","raw":"Another Part of Solution:"},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIs the \u003ci\u003epin\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e","raw":"\u003cbr\u003e\u003cbr\u003eIs the \u003ci\u003epin\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e"},"loc":{"start":{"line":207},"end":{"line":208}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":209},"end":{"line":209}}},"loc":{"start":{"line":207},"end":{"line":209}}},"right":{"type":"Literal","value":"\u003c/i\u003e greater than 10000? ","raw":"\u003c/i\u003e greater than 10000? "},"loc":{"start":{"line":207},"end":{"line":210}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003e101 AND ((SELECT pin FROM pins WHERE cc_number\u003d\u0027","raw":"\u003cbr\u003e\u003cbr\u003e101 AND ((SELECT pin FROM pins WHERE cc_number\u003d\u0027"},"loc":{"start":{"line":207},"end":{"line":211}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":212},"end":{"line":212}}},"loc":{"start":{"line":207},"end":{"line":212}}},"right":{"type":"Literal","value":"\u0027) \u0026gt 10000 ); ","raw":"\u0027) \u0026gt 10000 ); "},"loc":{"start":{"line":207},"end":{"line":213}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is ","raw":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is "},"loc":{"start":{"line":207},"end":{"line":214}}},"right":{"type":"Literal","value":"invalid then answer is no.","raw":"invalid then answer is no."},"loc":{"start":{"line":207},"end":{"line":215}}}],"loc":{"start":{"line":206},"end":{"line":215}}},"loc":{"start":{"line":206},"end":{"line":215}}},{"type":"ReturnStatement","argument":{"type":"Identifier","name":"hints","loc":{"start":{"line":217},"end":{"line":217}}},"loc":{"start":{"line":217},"end":{"line":217}}}],"loc":{"start":{"line":165},"end":{"line":218}}},"code":"\nprotected List\u003cString\u003e getHints(WebSession s) {\n    List\u003cString\u003e hints \u003d new ArrayList\u003cString\u003e();\n    hints.add(\"Compound SQL statements can be made by joining multiple tests with keywords like AND and OR. Create a SQL statement that you can use as a true/false test and then start narrowing down the number using \u003e and \u003c\u003cbr\u003e\u003cbr\u003eThe backend database is HSQLDB, but this shouldn\\\u0027t make any difference because you can solve this lesson with standard SQL syntax.\");\n    hints.add(\"The application is taking your input and inserting it at the end of a pre-formed SQL command. You will need to make use of the following SQL functions: \u003cbr\u003e\u003cbr\u003eAND - combine the logic of the normal query with a boolean result\u003cbr\u003e\u003cbr\u003e( and ) - group subexpressions so they evaluate properly\u003cbr\u003e\u003cbr\u003eSELECT - make a subquery for your target data and get a number\u003cbr\u003e\u003cbr\u003e\u0026gt and \u003d and \u0026lt - once you have the number, compare it to a choosen one\");\n    hints.add(\"This is the code for the query being built and issued by WebGoat:\u003cbr\u003e\u003cbr\u003e \\\"SELECT * FROM user_data WHERE userid \u003d \\\" + accountNumber \");\n    hints.add(\"Here is an example for another table:\u003cbr\u003e\u003cbr\u003e In the table \u003ci\u003euser_data\u003c/i\u003e, is the \u003ci\u003euserid\u003c/i\u003e for the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e333498703333\u003c/i\u003e greater than 100? \u003cbr\u003e\u003cbr\u003e101 AND ((SELECT userid FROM user_data WHERE cc_number\u003d\\\u0027333498703333\\\u0027) \u0026gt 100 ); \u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is invalid then answer is no.\");\n    hints.add(\"Partial Solution:\" + \"\u003cbr\u003e\u003cbr\u003eIs the \u003ci\u003epin\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e\" + TARGET_CC_NUM + \"\u003c/i\u003e greater than 1000? \" + \"\u003cbr\u003e\u003cbr\u003e101 AND ((SELECT pin FROM pins WHERE cc_number\u003d\\\u0027\" + TARGET_CC_NUM + \"\\\u0027) \u0026gt 1000 ); \" + \"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is \" + \"invalid then answer is no.\");\n    hints.add(\"Another Part of Solution:\" + \"\u003cbr\u003e\u003cbr\u003eIs the \u003ci\u003epin\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e\" + TARGET_CC_NUM + \"\u003c/i\u003e greater than 10000? \" + \"\u003cbr\u003e\u003cbr\u003e101 AND ((SELECT pin FROM pins WHERE cc_number\u003d\\\u0027\" + TARGET_CC_NUM + \"\\\u0027) \u0026gt 10000 ); \" + \"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is \" + \"invalid then answer is no.\");\n    return hints;\n}","loc":{"start":{"line":164},"end":{"line":218}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getInstructions"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"restype":{"type":"Identifier","name":"String","loc":{"start":{"line":225},"end":{"line":225}}},"typarams":[],"params":[{"type":"Identifier","name":"s","vartype":{"type":"Identifier","name":"WebSession","loc":{"start":{"line":225},"end":{"line":225}}}}],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"instructions","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":227},"end":{"line":227}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":227},"end":{"line":227}}},"init":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"The form below allows a user to enter an account number and determine if ","raw":"The form below allows a user to enter an account number and determine if "},"right":{"type":"Literal","value":"it is valid or not.  Use this form to develop a true / false test check other entries in the database.  ","raw":"it is valid or not.  Use this form to develop a true / false test check other entries in the database.  "},"loc":{"start":{"line":227},"end":{"line":228}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eThe goal is to find the value of ","raw":"\u003cbr\u003e\u003cbr\u003eThe goal is to find the value of "},"loc":{"start":{"line":227},"end":{"line":229}}},"right":{"type":"Literal","value":"the field \u003cb\u003epin\u003c/b\u003e in table \u003cb\u003epins\u003c/b\u003e for the row with the \u003cb\u003ecc_number\u003c/b\u003e of \u003cb\u003e ","raw":"the field \u003cb\u003epin\u003c/b\u003e in table \u003cb\u003epins\u003c/b\u003e for the row with the \u003cb\u003ecc_number\u003c/b\u003e of \u003cb\u003e "},"loc":{"start":{"line":227},"end":{"line":230}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":231},"end":{"line":231}}},"loc":{"start":{"line":227},"end":{"line":231}}},"right":{"type":"Literal","value":"\u003c/b\u003e.  The field is of type int, which is an integer.","raw":"\u003c/b\u003e.  The field is of type int, which is an integer."},"loc":{"start":{"line":227},"end":{"line":232}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003ePut the discovered pin value in the form to pass the lesson.","raw":"\u003cbr\u003e\u003cbr\u003ePut the discovered pin value in the form to pass the lesson."},"loc":{"start":{"line":227},"end":{"line":233}}},"loc":{"start":{"line":227},"end":{"line":233}}},{"type":"ReturnStatement","argument":{"type":"Identifier","name":"instructions","loc":{"start":{"line":235},"end":{"line":235}}},"loc":{"start":{"line":235},"end":{"line":235}}}],"loc":{"start":{"line":226},"end":{"line":236}}},"code":"\npublic String getInstructions(WebSession s) {\n    String instructions \u003d \"The form below allows a user to enter an account number and determine if \" + \"it is valid or not.  Use this form to develop a true / false test check other entries in the database.  \" + \"\u003cbr\u003e\u003cbr\u003eThe goal is to find the value of \" + \"the field \u003cb\u003epin\u003c/b\u003e in table \u003cb\u003epins\u003c/b\u003e for the row with the \u003cb\u003ecc_number\u003c/b\u003e of \u003cb\u003e \" + TARGET_CC_NUM + \"\u003c/b\u003e.  The field is of type int, which is an integer.\" + \"\u003cbr\u003e\u003cbr\u003ePut the discovered pin value in the form to pass the lesson.\";\n    return (instructions);\n}","loc":{"start":{"line":225},"end":{"line":236}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"DEFAULT_RANKING","vartype":{"type":"Identifier","name":"Integer","loc":{"start":{"line":238},"end":{"line":238}}}},"modifiers":{"type":"Modifiers","modifiers":["private","static","final"],"annotations":[]},"vartype":{"type":"Identifier","name":"Integer","loc":{"start":{"line":238},"end":{"line":238}}},"init":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"Integer","loc":{"start":{"line":238},"end":{"line":238}}},"arguments":[{"type":"Literal","value":90,"raw":90}],"loc":{"start":{"line":238},"end":{"line":238}}},"loc":{"start":{"line":238},"end":{"line":238}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getDefaultRanking"},"modifiers":{"type":"Modifiers","modifiers":["protected"],"annotations":[]},"restype":{"type":"Identifier","name":"Integer","loc":{"start":{"line":240},"end":{"line":240}}},"typarams":[],"params":[],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"ReturnStatement","argument":{"type":"Identifier","name":"DEFAULT_RANKING","loc":{"start":{"line":242},"end":{"line":242}}},"loc":{"start":{"line":242},"end":{"line":242}}}],"loc":{"start":{"line":241},"end":{"line":243}}},"code":"\nprotected Integer getDefaultRanking() {\n    return DEFAULT_RANKING;\n}","loc":{"start":{"line":240},"end":{"line":243}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getTitle"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"restype":{"type":"Identifier","name":"String","loc":{"start":{"line":250},"end":{"line":250}}},"typarams":[],"params":[],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"ReturnStatement","argument":{"type":"Literal","value":"Blind Numeric SQL Injection","raw":"Blind Numeric SQL Injection"},"loc":{"start":{"line":252},"end":{"line":252}}}],"loc":{"start":{"line":251},"end":{"line":253}}},"code":"\npublic String getTitle() {\n    return (\"Blind Numeric SQL Injection\");\n}","loc":{"start":{"line":250},"end":{"line":253}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"handleRequest"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"restype":{"type":"PrimitiveType"},"typarams":[],"params":[{"type":"Identifier","name":"s","vartype":{"type":"Identifier","name":"WebSession","loc":{"start":{"line":261},"end":{"line":261}}}}],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"TryStatement","handlers":[{"type":"CatchClause","param":{"type":"Identifier","name":"e","vartype":{"type":"Identifier","name":"Exception","loc":{"start":{"line":267},"end":{"line":267}}}},"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"System","loc":{"start":{"line":269},"end":{"line":269}}},"property":{"type":"Identifier","name":"out"},"loc":{"start":{"line":269},"end":{"line":269}}},"property":{"type":"Identifier","name":"println"},"loc":{"start":{"line":269},"end":{"line":269}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Exception caught: ","raw":"Exception caught: "},"right":{"type":"Identifier","name":"e","loc":{"start":{"line":269},"end":{"line":269}}},"loc":{"start":{"line":269},"end":{"line":269}}}],"loc":{"start":{"line":269},"end":{"line":269}}},"loc":{"start":{"line":269},"end":{"line":269}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"e","loc":{"start":{"line":270},"end":{"line":270}}},"property":{"type":"Identifier","name":"printStackTrace"},"loc":{"start":{"line":270},"end":{"line":270}}},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"System","loc":{"start":{"line":270},"end":{"line":270}}},"property":{"type":"Identifier","name":"out"},"loc":{"start":{"line":270},"end":{"line":270}}}],"loc":{"start":{"line":270},"end":{"line":270}}},"loc":{"start":{"line":270},"end":{"line":270}}}],"loc":{"start":{"line":268},"end":{"line":271}}},"loc":{"start":{"line":267},"end":{"line":271}}}],"block":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"super","loc":{"start":{"line":265},"end":{"line":265}}},"property":{"type":"Identifier","name":"handleRequest"},"loc":{"start":{"line":265},"end":{"line":265}}},"arguments":[{"type":"Identifier","name":"s","loc":{"start":{"line":265},"end":{"line":265}}}],"loc":{"start":{"line":265},"end":{"line":265}}},"loc":{"start":{"line":265},"end":{"line":265}}}],"loc":{"start":{"line":264},"end":{"line":266}}},"loc":{"start":{"line":263},"end":{"line":271}}}],"loc":{"start":{"line":262},"end":{"line":272}}},"code":"\npublic void handleRequest(WebSession s) {\n    try {\n        super.handleRequest(s);\n    } catch (Exception e) {\n        System.out.println(\"Exception caught: \" + e);\n        e.printStackTrace(System.out);\n    }\n}","loc":{"start":{"line":261},"end":{"line":272}}}],"loc":{"start":{"line":54},"end":{"line":273}}}],"loc":{"start":{"line":1},"end":{"line":273}},"sourcefile":"/Users/gli/codiscope/jacks.engine/WebGoat-5.4/WEB-INF/classes/org/owasp/webgoat/lessons/BlindNumericSqlInjection.java"}