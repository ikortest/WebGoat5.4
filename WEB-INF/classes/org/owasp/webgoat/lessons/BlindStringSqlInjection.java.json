{"language":"Java","type":"CompilationUnit","pid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":1},"end":{"line":1}}},"property":{"type":"Identifier","name":"owasp"},"loc":{"start":{"line":1},"end":{"line":1}}},"property":{"type":"Identifier","name":"webgoat"},"loc":{"start":{"line":1},"end":{"line":1}}},"property":{"type":"Identifier","name":"lessons"},"loc":{"start":{"line":1},"end":{"line":1}}},"annotations":[],"definitions":[{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":3},"end":{"line":3}}},"property":{"type":"Identifier","name":"sql"},"loc":{"start":{"line":3},"end":{"line":3}}},"property":{"type":"Identifier","name":"Connection"},"loc":{"start":{"line":3},"end":{"line":3}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":4},"end":{"line":4}}},"property":{"type":"Identifier","name":"sql"},"loc":{"start":{"line":4},"end":{"line":4}}},"property":{"type":"Identifier","name":"ResultSet"},"loc":{"start":{"line":4},"end":{"line":4}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":5},"end":{"line":5}}},"property":{"type":"Identifier","name":"sql"},"loc":{"start":{"line":5},"end":{"line":5}}},"property":{"type":"Identifier","name":"SQLException"},"loc":{"start":{"line":5},"end":{"line":5}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":6},"end":{"line":6}}},"property":{"type":"Identifier","name":"sql"},"loc":{"start":{"line":6},"end":{"line":6}}},"property":{"type":"Identifier","name":"Statement"},"loc":{"start":{"line":6},"end":{"line":6}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":7},"end":{"line":7}}},"property":{"type":"Identifier","name":"util"},"loc":{"start":{"line":7},"end":{"line":7}}},"property":{"type":"Identifier","name":"ArrayList"},"loc":{"start":{"line":7},"end":{"line":7}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"java","loc":{"start":{"line":8},"end":{"line":8}}},"property":{"type":"Identifier","name":"util"},"loc":{"start":{"line":8},"end":{"line":8}}},"property":{"type":"Identifier","name":"List"},"loc":{"start":{"line":8},"end":{"line":8}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":10},"end":{"line":10}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":10},"end":{"line":10}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":10},"end":{"line":10}}},"property":{"type":"Identifier","name":"Element"},"loc":{"start":{"line":10},"end":{"line":10}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":11},"end":{"line":11}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":11},"end":{"line":11}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":11},"end":{"line":11}}},"property":{"type":"Identifier","name":"ElementContainer"},"loc":{"start":{"line":11},"end":{"line":11}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":12},"end":{"line":12}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":12},"end":{"line":12}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":12},"end":{"line":12}}},"property":{"type":"Identifier","name":"html"},"loc":{"start":{"line":12},"end":{"line":12}}},"property":{"type":"Identifier","name":"Input"},"loc":{"start":{"line":12},"end":{"line":12}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":13},"end":{"line":13}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":13},"end":{"line":13}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":13},"end":{"line":13}}},"property":{"type":"Identifier","name":"html"},"loc":{"start":{"line":13},"end":{"line":13}}},"property":{"type":"Identifier","name":"P"},"loc":{"start":{"line":13},"end":{"line":13}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":14},"end":{"line":14}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":14},"end":{"line":14}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":14},"end":{"line":14}}},"property":{"type":"Identifier","name":"html"},"loc":{"start":{"line":14},"end":{"line":14}}},"property":{"type":"Identifier","name":"A"},"loc":{"start":{"line":14},"end":{"line":14}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":15},"end":{"line":15}}},"property":{"type":"Identifier","name":"apache"},"loc":{"start":{"line":15},"end":{"line":15}}},"property":{"type":"Identifier","name":"ecs"},"loc":{"start":{"line":15},"end":{"line":15}}},"property":{"type":"Identifier","name":"html"},"loc":{"start":{"line":15},"end":{"line":15}}},"property":{"type":"Identifier","name":"IMG"},"loc":{"start":{"line":15},"end":{"line":15}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":16},"end":{"line":16}}},"property":{"type":"Identifier","name":"owasp"},"loc":{"start":{"line":16},"end":{"line":16}}},"property":{"type":"Identifier","name":"webgoat"},"loc":{"start":{"line":16},"end":{"line":16}}},"property":{"type":"Identifier","name":"session"},"loc":{"start":{"line":16},"end":{"line":16}}},"property":{"type":"Identifier","name":"DatabaseUtilities"},"loc":{"start":{"line":16},"end":{"line":16}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":17},"end":{"line":17}}},"property":{"type":"Identifier","name":"owasp"},"loc":{"start":{"line":17},"end":{"line":17}}},"property":{"type":"Identifier","name":"webgoat"},"loc":{"start":{"line":17},"end":{"line":17}}},"property":{"type":"Identifier","name":"session"},"loc":{"start":{"line":17},"end":{"line":17}}},"property":{"type":"Identifier","name":"ECSFactory"},"loc":{"start":{"line":17},"end":{"line":17}}}},{"type":"Import","qualid":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"org","loc":{"start":{"line":18},"end":{"line":18}}},"property":{"type":"Identifier","name":"owasp"},"loc":{"start":{"line":18},"end":{"line":18}}},"property":{"type":"Identifier","name":"webgoat"},"loc":{"start":{"line":18},"end":{"line":18}}},"property":{"type":"Identifier","name":"session"},"loc":{"start":{"line":18},"end":{"line":18}}},"property":{"type":"Identifier","name":"WebSession"},"loc":{"start":{"line":18},"end":{"line":18}}}},{"type":"ClassDeclaration","id":{"type":"Identifier","name":"BlindStringSqlInjection"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"extending":{"type":"Identifier","name":"LessonAdapter","loc":{"start":{"line":54},"end":{"line":54}}},"definitions":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"MANDIANT_LOGO","vartype":{"type":"Identifier","name":"A","loc":{"start":{"line":57},"end":{"line":57}}}},"modifiers":{"type":"Modifiers","modifiers":["public","static","final"],"annotations":[]},"vartype":{"type":"Identifier","name":"A","loc":{"start":{"line":57},"end":{"line":57}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"A","loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setHref"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":"http://www.mandiant.com","raw":"http://www.mandiant.com"}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"IMG","loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":"images/logos/mandiant.png","raw":"images/logos/mandiant.png"}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setAlt"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":"MANDIANT","raw":"MANDIANT"}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setBorder"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":0,"raw":0}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setHspace"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":0,"raw":0}],"loc":{"start":{"line":57},"end":{"line":57}}},"property":{"type":"Identifier","name":"setVspace"},"loc":{"start":{"line":57},"end":{"line":57}}},"arguments":[{"type":"Literal","value":0,"raw":0}],"loc":{"start":{"line":57},"end":{"line":57}}}],"loc":{"start":{"line":57},"end":{"line":57}}},"loc":{"start":{"line":57},"end":{"line":57}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"ACCT_NUM","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":59},"end":{"line":59}}}},"modifiers":{"type":"Modifiers","modifiers":["private","static","final"],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":59},"end":{"line":59}}},"init":{"type":"Literal","value":"account_number","raw":"account_number"},"loc":{"start":{"line":59},"end":{"line":59}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"TARGET_CC_NUM","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":61},"end":{"line":61}}}},"modifiers":{"type":"Modifiers","modifiers":["private","static","final"],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":61},"end":{"line":61}}},"init":{"type":"Literal","value":"4321432143214321","raw":"4321432143214321"},"loc":{"start":{"line":61},"end":{"line":61}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"createContent"},"modifiers":{"type":"Modifiers","modifiers":["protected"],"annotations":[]},"restype":{"type":"Identifier","name":"Element","loc":{"start":{"line":70},"end":{"line":70}}},"typarams":[],"params":[{"type":"Identifier","name":"s","vartype":{"type":"Identifier","name":"WebSession","loc":{"start":{"line":70},"end":{"line":70}}}}],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"ec","vartype":{"type":"Identifier","name":"ElementContainer","loc":{"start":{"line":72},"end":{"line":72}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"ElementContainer","loc":{"start":{"line":72},"end":{"line":72}}},"init":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"ElementContainer","loc":{"start":{"line":72},"end":{"line":72}}},"arguments":[],"loc":{"start":{"line":72},"end":{"line":72}}},"loc":{"start":{"line":72},"end":{"line":72}}},{"type":"TryStatement","handlers":[{"type":"CatchClause","param":{"type":"Identifier","name":"e","vartype":{"type":"Identifier","name":"Exception","loc":{"start":{"line":135},"end":{"line":135}}}},"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"s","loc":{"start":{"line":137},"end":{"line":137}}},"property":{"type":"Identifier","name":"setMessage"},"loc":{"start":{"line":137},"end":{"line":137}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Error generating ","raw":"Error generating "},"right":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"ThisExpression"},"property":{"type":"Identifier","name":"getClass"},"loc":{"start":{"line":137},"end":{"line":137}}},"arguments":[],"loc":{"start":{"line":137},"end":{"line":137}}},"property":{"type":"Identifier","name":"getName"},"loc":{"start":{"line":137},"end":{"line":137}}},"arguments":[],"loc":{"start":{"line":137},"end":{"line":137}}},"loc":{"start":{"line":137},"end":{"line":137}}}],"loc":{"start":{"line":137},"end":{"line":137}}},"loc":{"start":{"line":137},"end":{"line":137}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"e","loc":{"start":{"line":138},"end":{"line":138}}},"property":{"type":"Identifier","name":"printStackTrace"},"loc":{"start":{"line":138},"end":{"line":138}}},"arguments":[],"loc":{"start":{"line":138},"end":{"line":138}}},"loc":{"start":{"line":138},"end":{"line":138}}}],"loc":{"start":{"line":136},"end":{"line":139}}},"loc":{"start":{"line":135},"end":{"line":139}}}],"block":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"connection","vartype":{"type":"Identifier","name":"Connection","loc":{"start":{"line":76},"end":{"line":76}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Connection","loc":{"start":{"line":76},"end":{"line":76}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"DatabaseUtilities","loc":{"start":{"line":76},"end":{"line":76}}},"property":{"type":"Identifier","name":"getConnection"},"loc":{"start":{"line":76},"end":{"line":76}}},"arguments":[{"type":"Identifier","name":"s","loc":{"start":{"line":76},"end":{"line":76}}}],"loc":{"start":{"line":76},"end":{"line":76}}},"loc":{"start":{"line":76},"end":{"line":76}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":78},"end":{"line":78}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":78},"end":{"line":78}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"P","loc":{"start":{"line":78},"end":{"line":78}}},"arguments":[],"loc":{"start":{"line":78},"end":{"line":78}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":78},"end":{"line":78}}},"arguments":[{"type":"Literal","value":"Enter your Account Number: ","raw":"Enter your Account Number: "}],"loc":{"start":{"line":78},"end":{"line":78}}}],"loc":{"start":{"line":78},"end":{"line":78}}},"loc":{"start":{"line":78},"end":{"line":78}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"accountNumber","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":80},"end":{"line":80}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":80},"end":{"line":80}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"s","loc":{"start":{"line":80},"end":{"line":80}}},"property":{"type":"Identifier","name":"getParser"},"loc":{"start":{"line":80},"end":{"line":80}}},"arguments":[],"loc":{"start":{"line":80},"end":{"line":80}}},"property":{"type":"Identifier","name":"getRawParameter"},"loc":{"start":{"line":80},"end":{"line":80}}},"arguments":[{"type":"Identifier","name":"ACCT_NUM","loc":{"start":{"line":80},"end":{"line":80}}},{"type":"Literal","value":"101","raw":"101"}],"loc":{"start":{"line":80},"end":{"line":80}}},"loc":{"start":{"line":80},"end":{"line":80}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"input","vartype":{"type":"Identifier","name":"Input","loc":{"start":{"line":81},"end":{"line":81}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Input","loc":{"start":{"line":81},"end":{"line":81}}},"init":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"Input","loc":{"start":{"line":81},"end":{"line":81}}},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"Input","loc":{"start":{"line":81},"end":{"line":81}}},"property":{"type":"Identifier","name":"TEXT"},"loc":{"start":{"line":81},"end":{"line":81}}},{"type":"Identifier","name":"ACCT_NUM","loc":{"start":{"line":81},"end":{"line":81}}},{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"accountNumber","loc":{"start":{"line":81},"end":{"line":81}}},"property":{"type":"Identifier","name":"toString"},"loc":{"start":{"line":81},"end":{"line":81}}},"arguments":[],"loc":{"start":{"line":81},"end":{"line":81}}}],"loc":{"start":{"line":81},"end":{"line":81}}},"loc":{"start":{"line":81},"end":{"line":81}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":82},"end":{"line":82}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":82},"end":{"line":82}}},"arguments":[{"type":"Identifier","name":"input","loc":{"start":{"line":82},"end":{"line":82}}}],"loc":{"start":{"line":82},"end":{"line":82}}},"loc":{"start":{"line":82},"end":{"line":82}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"b","vartype":{"type":"Identifier","name":"Element","loc":{"start":{"line":84},"end":{"line":84}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Element","loc":{"start":{"line":84},"end":{"line":84}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ECSFactory","loc":{"start":{"line":84},"end":{"line":84}}},"property":{"type":"Identifier","name":"makeButton"},"loc":{"start":{"line":84},"end":{"line":84}}},"arguments":[{"type":"Literal","value":"Go!","raw":"Go!"}],"loc":{"start":{"line":84},"end":{"line":84}}},"loc":{"start":{"line":84},"end":{"line":84}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":85},"end":{"line":85}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":85},"end":{"line":85}}},"arguments":[{"type":"Identifier","name":"b","loc":{"start":{"line":85},"end":{"line":85}}}],"loc":{"start":{"line":85},"end":{"line":85}}},"loc":{"start":{"line":85},"end":{"line":85}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"query","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":87},"end":{"line":87}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":87},"end":{"line":87}}},"init":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"SELECT * FROM user_data WHERE userid \u003d ","raw":"SELECT * FROM user_data WHERE userid \u003d "},"right":{"type":"Identifier","name":"accountNumber","loc":{"start":{"line":87},"end":{"line":87}}},"loc":{"start":{"line":87},"end":{"line":87}}},"loc":{"start":{"line":87},"end":{"line":87}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"answer_query","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":88},"end":{"line":88}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":88},"end":{"line":88}}},"loc":{"start":{"line":88},"end":{"line":88}}},{"type":"ExpressionStatement","expression":{"type":"AssignmentExpression","left":{"type":"Identifier","name":"answer_query","loc":{"start":{"line":95},"end":{"line":95}}},"right":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"SELECT name FROM pins WHERE cc_number \u003d \u0027","raw":"SELECT name FROM pins WHERE cc_number \u003d \u0027"},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":95},"end":{"line":95}}},"loc":{"start":{"line":95},"end":{"line":95}}},"right":{"type":"Literal","value":"\u0027","raw":"\u0027"},"loc":{"start":{"line":95},"end":{"line":95}}},"loc":{"start":{"line":95},"end":{"line":95}}},"loc":{"start":{"line":95},"end":{"line":95}}},{"type":"TryStatement","handlers":[{"type":"CatchClause","param":{"type":"Identifier","name":"sqle","vartype":{"type":"Identifier","name":"SQLException","loc":{"start":{"line":125},"end":{"line":125}}}},"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":127},"end":{"line":127}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":127},"end":{"line":127}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"P","loc":{"start":{"line":127},"end":{"line":127}}},"arguments":[],"loc":{"start":{"line":127},"end":{"line":127}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":127},"end":{"line":127}}},"arguments":[{"type":"Literal","value":"An error occurred, please try again.","raw":"An error occurred, please try again."}],"loc":{"start":{"line":127},"end":{"line":127}}}],"loc":{"start":{"line":127},"end":{"line":127}}},"loc":{"start":{"line":127},"end":{"line":127}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":130},"end":{"line":130}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":130},"end":{"line":130}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"P","loc":{"start":{"line":130},"end":{"line":130}}},"arguments":[],"loc":{"start":{"line":130},"end":{"line":130}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":130},"end":{"line":130}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"sqle","loc":{"start":{"line":130},"end":{"line":130}}},"property":{"type":"Identifier","name":"getMessage"},"loc":{"start":{"line":130},"end":{"line":130}}},"arguments":[],"loc":{"start":{"line":130},"end":{"line":130}}}],"loc":{"start":{"line":130},"end":{"line":130}}}],"loc":{"start":{"line":130},"end":{"line":130}}},"loc":{"start":{"line":130},"end":{"line":130}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"sqle","loc":{"start":{"line":131},"end":{"line":131}}},"property":{"type":"Identifier","name":"printStackTrace"},"loc":{"start":{"line":131},"end":{"line":131}}},"arguments":[],"loc":{"start":{"line":131},"end":{"line":131}}},"loc":{"start":{"line":131},"end":{"line":131}}}],"loc":{"start":{"line":126},"end":{"line":133}}},"loc":{"start":{"line":125},"end":{"line":133}}}],"block":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"answer_statement","vartype":{"type":"Identifier","name":"Statement","loc":{"start":{"line":100},"end":{"line":100}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Statement","loc":{"start":{"line":100},"end":{"line":100}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"connection","loc":{"start":{"line":100},"end":{"line":100}}},"property":{"type":"Identifier","name":"createStatement"},"loc":{"start":{"line":100},"end":{"line":100}}},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":101},"end":{"line":101}}},"property":{"type":"Identifier","name":"TYPE_SCROLL_INSENSITIVE"},"loc":{"start":{"line":101},"end":{"line":101}}},{"type":"MemberExpression","object":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":101},"end":{"line":101}}},"property":{"type":"Identifier","name":"CONCUR_READ_ONLY"},"loc":{"start":{"line":101},"end":{"line":101}}}],"loc":{"start":{"line":100},"end":{"line":101}}},"loc":{"start":{"line":100},"end":{"line":101}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"answer_results","vartype":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":102},"end":{"line":102}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":102},"end":{"line":102}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"answer_statement","loc":{"start":{"line":102},"end":{"line":102}}},"property":{"type":"Identifier","name":"executeQuery"},"loc":{"start":{"line":102},"end":{"line":102}}},"arguments":[{"type":"Identifier","name":"answer_query","loc":{"start":{"line":102},"end":{"line":102}}}],"loc":{"start":{"line":102},"end":{"line":102}}},"loc":{"start":{"line":102},"end":{"line":102}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"answer_results","loc":{"start":{"line":103},"end":{"line":103}}},"property":{"type":"Identifier","name":"first"},"loc":{"start":{"line":103},"end":{"line":103}}},"arguments":[],"loc":{"start":{"line":103},"end":{"line":103}}},"loc":{"start":{"line":103},"end":{"line":103}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"System","loc":{"start":{"line":104},"end":{"line":104}}},"property":{"type":"Identifier","name":"out"},"loc":{"start":{"line":104},"end":{"line":104}}},"property":{"type":"Identifier","name":"println"},"loc":{"start":{"line":104},"end":{"line":104}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Account: ","raw":"Account: "},"right":{"type":"Identifier","name":"accountNumber","loc":{"start":{"line":104},"end":{"line":104}}},"loc":{"start":{"line":104},"end":{"line":104}}}],"loc":{"start":{"line":104},"end":{"line":104}}},"loc":{"start":{"line":104},"end":{"line":104}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"System","loc":{"start":{"line":105},"end":{"line":105}}},"property":{"type":"Identifier","name":"out"},"loc":{"start":{"line":105},"end":{"line":105}}},"property":{"type":"Identifier","name":"println"},"loc":{"start":{"line":105},"end":{"line":105}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Answer : ","raw":"Answer : "},"right":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"answer_results","loc":{"start":{"line":105},"end":{"line":105}}},"property":{"type":"Identifier","name":"getString"},"loc":{"start":{"line":105},"end":{"line":105}}},"arguments":[{"type":"Literal","value":1,"raw":1}],"loc":{"start":{"line":105},"end":{"line":105}}},"loc":{"start":{"line":105},"end":{"line":105}}}],"loc":{"start":{"line":105},"end":{"line":105}}},"loc":{"start":{"line":105},"end":{"line":105}}},{"type":"IfStatement","test":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"accountNumber","loc":{"start":{"line":106},"end":{"line":106}}},"property":{"type":"Identifier","name":"toString"},"loc":{"start":{"line":106},"end":{"line":106}}},"arguments":[],"loc":{"start":{"line":106},"end":{"line":106}}},"property":{"type":"Identifier","name":"equals"},"loc":{"start":{"line":106},"end":{"line":106}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"answer_results","loc":{"start":{"line":106},"end":{"line":106}}},"property":{"type":"Identifier","name":"getString"},"loc":{"start":{"line":106},"end":{"line":106}}},"arguments":[{"type":"Literal","value":1,"raw":1}],"loc":{"start":{"line":106},"end":{"line":106}}}],"loc":{"start":{"line":106},"end":{"line":106}}},"consequent":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"Identifier","name":"makeSuccess","loc":{"start":{"line":108},"end":{"line":108}}},"arguments":[{"type":"Identifier","name":"s","loc":{"start":{"line":108},"end":{"line":108}}}],"loc":{"start":{"line":108},"end":{"line":108}}},"loc":{"start":{"line":108},"end":{"line":108}}}],"loc":{"start":{"line":107},"end":{"line":109}}},"alternate":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"statement","vartype":{"type":"Identifier","name":"Statement","loc":{"start":{"line":112},"end":{"line":112}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"Statement","loc":{"start":{"line":112},"end":{"line":112}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"connection","loc":{"start":{"line":112},"end":{"line":112}}},"property":{"type":"Identifier","name":"createStatement"},"loc":{"start":{"line":112},"end":{"line":112}}},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":113},"end":{"line":113}}},"property":{"type":"Identifier","name":"TYPE_SCROLL_INSENSITIVE"},"loc":{"start":{"line":113},"end":{"line":113}}},{"type":"MemberExpression","object":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":113},"end":{"line":113}}},"property":{"type":"Identifier","name":"CONCUR_READ_ONLY"},"loc":{"start":{"line":113},"end":{"line":113}}}],"loc":{"start":{"line":112},"end":{"line":113}}},"loc":{"start":{"line":112},"end":{"line":113}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"results","vartype":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":114},"end":{"line":114}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"ResultSet","loc":{"start":{"line":114},"end":{"line":114}}},"init":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"statement","loc":{"start":{"line":114},"end":{"line":114}}},"property":{"type":"Identifier","name":"executeQuery"},"loc":{"start":{"line":114},"end":{"line":114}}},"arguments":[{"type":"Identifier","name":"query","loc":{"start":{"line":114},"end":{"line":114}}}],"loc":{"start":{"line":114},"end":{"line":114}}},"loc":{"start":{"line":114},"end":{"line":114}}},{"type":"IfStatement","test":{"type":"BinaryExpression","operator":"CONDITIONAL_AND","left":{"type":"BinaryExpression","operator":"NOT_EQUAL_TO","left":{"type":"Identifier","name":"results","loc":{"start":{"line":116},"end":{"line":116}}},"right":{"type":"Literal"},"loc":{"start":{"line":116},"end":{"line":116}}},"right":{"type":"BinaryExpression","operator":"EQUAL_TO","left":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"results","loc":{"start":{"line":116},"end":{"line":116}}},"property":{"type":"Identifier","name":"first"},"loc":{"start":{"line":116},"end":{"line":116}}},"arguments":[],"loc":{"start":{"line":116},"end":{"line":116}}},"right":{"type":"Literal","value":1,"raw":1},"loc":{"start":{"line":116},"end":{"line":116}}},"loc":{"start":{"line":116},"end":{"line":116}}},"consequent":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":118},"end":{"line":118}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":118},"end":{"line":118}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"P","loc":{"start":{"line":118},"end":{"line":118}}},"arguments":[],"loc":{"start":{"line":118},"end":{"line":118}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":118},"end":{"line":118}}},"arguments":[{"type":"Literal","value":"Account number is valid","raw":"Account number is valid"}],"loc":{"start":{"line":118},"end":{"line":118}}}],"loc":{"start":{"line":118},"end":{"line":118}}},"loc":{"start":{"line":118},"end":{"line":118}}}],"loc":{"start":{"line":117},"end":{"line":119}}},"alternate":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"ec","loc":{"start":{"line":121},"end":{"line":121}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":121},"end":{"line":121}}},"arguments":[{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"P","loc":{"start":{"line":121},"end":{"line":121}}},"arguments":[],"loc":{"start":{"line":121},"end":{"line":121}}},"property":{"type":"Identifier","name":"addElement"},"loc":{"start":{"line":121},"end":{"line":121}}},"arguments":[{"type":"Literal","value":"Invalid account number","raw":"Invalid account number"}],"loc":{"start":{"line":121},"end":{"line":121}}}],"loc":{"start":{"line":121},"end":{"line":121}}},"loc":{"start":{"line":121},"end":{"line":121}}}],"loc":{"start":{"line":120},"end":{"line":122}}},"loc":{"start":{"line":116},"end":{"line":122}}}],"loc":{"start":{"line":110},"end":{"line":123}}},"loc":{"start":{"line":106},"end":{"line":123}}}],"loc":{"start":{"line":99},"end":{"line":124}}},"loc":{"start":{"line":98},"end":{"line":133}}}],"loc":{"start":{"line":75},"end":{"line":134}}},"loc":{"start":{"line":74},"end":{"line":139}}},{"type":"ReturnStatement","argument":{"type":"Identifier","name":"ec","loc":{"start":{"line":141},"end":{"line":141}}},"loc":{"start":{"line":141},"end":{"line":141}}}],"loc":{"start":{"line":71},"end":{"line":142}}},"code":"\nprotected Element createContent(WebSession s) {\n    ElementContainer ec \u003d new ElementContainer();\n    try {\n        Connection connection \u003d DatabaseUtilities.getConnection(s);\n        ec.addElement(new P().addElement(\"Enter your Account Number: \"));\n        String accountNumber \u003d s.getParser().getRawParameter(ACCT_NUM, \"101\");\n        Input input \u003d new Input(Input.TEXT, ACCT_NUM, accountNumber.toString());\n        ec.addElement(input);\n        Element b \u003d ECSFactory.makeButton(\"Go!\");\n        ec.addElement(b);\n        String query \u003d \"SELECT * FROM user_data WHERE userid \u003d \" + accountNumber;\n        String answer_query;\n        answer_query \u003d \"SELECT name FROM pins WHERE cc_number \u003d \\\u0027\" + TARGET_CC_NUM + \"\\\u0027\";\n        try {\n            Statement answer_statement \u003d connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n            ResultSet answer_results \u003d answer_statement.executeQuery(answer_query);\n            answer_results.first();\n            System.out.println(\"Account: \" + accountNumber);\n            System.out.println(\"Answer : \" + answer_results.getString(1));\n            if (accountNumber.toString().equals(answer_results.getString(1))) {\n                makeSuccess(s);\n            } else {\n                Statement statement \u003d connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n                ResultSet results \u003d statement.executeQuery(query);\n                if ((results !\u003d null) \u0026\u0026 (results.first() \u003d\u003d true)) {\n                    ec.addElement(new P().addElement(\"Account number is valid\"));\n                } else {\n                    ec.addElement(new P().addElement(\"Invalid account number\"));\n                }\n            }\n        } catch (SQLException sqle) {\n            ec.addElement(new P().addElement(\"An error occurred, please try again.\"));\n            ec.addElement(new P().addElement(sqle.getMessage()));\n            sqle.printStackTrace();\n        }\n    } catch (Exception e) {\n        s.setMessage(\"Error generating \" + this.getClass().getName());\n        e.printStackTrace();\n    }\n    return (ec);\n}","loc":{"start":{"line":70},"end":{"line":142}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getDefaultCategory"},"modifiers":{"type":"Modifiers","modifiers":["protected"],"annotations":[]},"restype":{"type":"Identifier","name":"Category","loc":{"start":{"line":149},"end":{"line":149}}},"typarams":[],"params":[],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"ReturnStatement","argument":{"type":"MemberExpression","object":{"type":"Identifier","name":"Category","loc":{"start":{"line":151},"end":{"line":151}}},"property":{"type":"Identifier","name":"INJECTION"},"loc":{"start":{"line":151},"end":{"line":151}}},"loc":{"start":{"line":151},"end":{"line":151}}}],"loc":{"start":{"line":150},"end":{"line":152}}},"code":"\nprotected Category getDefaultCategory() {\n    return Category.INJECTION;\n}","loc":{"start":{"line":149},"end":{"line":152}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getCredits"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"restype":{"type":"Identifier","name":"Element","loc":{"start":{"line":159},"end":{"line":159}}},"typarams":[],"params":[],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"ReturnStatement","argument":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"super","loc":{"start":{"line":161},"end":{"line":161}}},"property":{"type":"Identifier","name":"getCustomCredits"},"loc":{"start":{"line":161},"end":{"line":161}}},"arguments":[{"type":"Literal","value":"Created by Chuck Willis\u0026nbsp;","raw":"Created by Chuck Willis\u0026nbsp;"},{"type":"Identifier","name":"MANDIANT_LOGO","loc":{"start":{"line":161},"end":{"line":161}}}],"loc":{"start":{"line":161},"end":{"line":161}}},"loc":{"start":{"line":161},"end":{"line":161}}}],"loc":{"start":{"line":160},"end":{"line":162}}},"code":"\npublic Element getCredits() {\n    return super.getCustomCredits(\"Created by Chuck Willis\u0026nbsp;\", MANDIANT_LOGO);\n}","loc":{"start":{"line":159},"end":{"line":162}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getHints"},"modifiers":{"type":"Modifiers","modifiers":["protected"],"annotations":[]},"restype":{"type":"Identifier","name":"List","loc":{"start":{"line":189},"end":{"line":189}}},"typarams":[],"params":[{"type":"Identifier","name":"s","vartype":{"type":"Identifier","name":"WebSession","loc":{"start":{"line":189},"end":{"line":189}}}}],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"hints","vartype":{"type":"Identifier","name":"List","loc":{"start":{"line":191},"end":{"line":191}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"List","loc":{"start":{"line":191},"end":{"line":191}}},"init":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"ArrayList","loc":{"start":{"line":191},"end":{"line":191}}},"arguments":[],"loc":{"start":{"line":191},"end":{"line":191}}},"loc":{"start":{"line":191},"end":{"line":191}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":194},"end":{"line":194}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":194},"end":{"line":195}}},"arguments":[{"type":"Literal","value":"Compound SQL statements can be made by joining multiple tests with keywords like AND and OR. Create a SQL statement that you can use as a true/false test and then select the first character of the target element and do a start narrowing down the character using \u003e and \u003c\u003cbr\u003e\u003cbr\u003eThe backend database is HSQLDB.  Keep that in mind if you research SQL functions on the Internet since different databases use some different functions and syntax.\u003cbr\u003e\u003cbr\u003eYou can find more about HSQLDB\u0027s SQL Syntax at \u003ca href\u003d\u0027http://hsqldb.org/doc/guide/ch09.html\u0027\u003ehttp://hsqldb.org/doc/guide/ch09.html\u003c/a\u003e.  Pay attention to the section titled \"String built-in Functions / Stored Procedures\".","raw":"Compound SQL statements can be made by joining multiple tests with keywords like AND and OR. Create a SQL statement that you can use as a true/false test and then select the first character of the target element and do a start narrowing down the character using \u003e and \u003c\u003cbr\u003e\u003cbr\u003eThe backend database is HSQLDB.  Keep that in mind if you research SQL functions on the Internet since different databases use some different functions and syntax.\u003cbr\u003e\u003cbr\u003eYou can find more about HSQLDB\u0027s SQL Syntax at \u003ca href\u003d\u0027http://hsqldb.org/doc/guide/ch09.html\u0027\u003ehttp://hsqldb.org/doc/guide/ch09.html\u003c/a\u003e.  Pay attention to the section titled \"String built-in Functions / Stored Procedures\"."}],"loc":{"start":{"line":194},"end":{"line":204}}},"loc":{"start":{"line":194},"end":{"line":204}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":206},"end":{"line":206}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":206},"end":{"line":207}}},"arguments":[{"type":"Literal","value":"The application is taking your input and inserting it at the end of a pre-formed SQL command. You will need to make use of the following SQL contstructs: \u003cbr\u003e\u003cbr\u003eAND - combine the logic of the normal query with a boolean result\u003cbr\u003e\u003cbr\u003e( and ) - group subexpressions so they evaluate properly\u003cbr\u003e\u003cbr\u003eSELECT - make a subquery for your target data and get a string \u003cbr\u003e\u003cbr\u003eSUBSTRING(string, start, length) - returns a substring of string starting at the start character and going for length characters \u003cbr\u003e\u003cbr\u003e\u0026gt and \u003d and \u0026lt - once you have a character\u0027s value, compare it to a choosen one\u003cbr\u003e\u003cbr\u003eYou can find more about HSQLDB\u0027s SQL Syntax at \u003ca href\u003d\u0027http://hsqldb.org/doc/guide/ch09.html\u0027\u003ehttp://hsqldb.org/doc/guide/ch09.html\u003c/a\u003e","raw":"The application is taking your input and inserting it at the end of a pre-formed SQL command. You will need to make use of the following SQL contstructs: \u003cbr\u003e\u003cbr\u003eAND - combine the logic of the normal query with a boolean result\u003cbr\u003e\u003cbr\u003e( and ) - group subexpressions so they evaluate properly\u003cbr\u003e\u003cbr\u003eSELECT - make a subquery for your target data and get a string \u003cbr\u003e\u003cbr\u003eSUBSTRING(string, start, length) - returns a substring of string starting at the start character and going for length characters \u003cbr\u003e\u003cbr\u003e\u0026gt and \u003d and \u0026lt - once you have a character\u0027s value, compare it to a choosen one\u003cbr\u003e\u003cbr\u003eYou can find more about HSQLDB\u0027s SQL Syntax at \u003ca href\u003d\u0027http://hsqldb.org/doc/guide/ch09.html\u0027\u003ehttp://hsqldb.org/doc/guide/ch09.html\u003c/a\u003e"}],"loc":{"start":{"line":206},"end":{"line":217}}},"loc":{"start":{"line":206},"end":{"line":217}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":219},"end":{"line":219}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":219},"end":{"line":219}}},"arguments":[{"type":"Literal","value":"This is the code for the query being built and issued by WebGoat:\u003cbr\u003e\u003cbr\u003e \"SELECT * FROM user_data WHERE userid \u003d \" + accountNumber ","raw":"This is the code for the query being built and issued by WebGoat:\u003cbr\u003e\u003cbr\u003e \"SELECT * FROM user_data WHERE userid \u003d \" + accountNumber "}],"loc":{"start":{"line":219},"end":{"line":220}}},"loc":{"start":{"line":219},"end":{"line":220}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":222},"end":{"line":222}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":222},"end":{"line":223}}},"arguments":[{"type":"Literal","value":"Here is an example for another table:\u003cbr\u003e\u003cbr\u003eIn the table \u003ci\u003euser_data\u003c/i\u003e, is the first character of the \u003ci\u003efirst_name\u003c/i\u003e for the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e333498703333\u003c/i\u003e greater than \u0027M\u0027? \u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT first_name FROM user_data WHERE cc_number\u003d\u0027333498703333\u0027), 1, 1) \u0026gt \u0027M\u0027 ); \u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is invalid then answer is no.","raw":"Here is an example for another table:\u003cbr\u003e\u003cbr\u003eIn the table \u003ci\u003euser_data\u003c/i\u003e, is the first character of the \u003ci\u003efirst_name\u003c/i\u003e for the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e333498703333\u003c/i\u003e greater than \u0027M\u0027? \u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT first_name FROM user_data WHERE cc_number\u003d\u0027333498703333\u0027), 1, 1) \u0026gt \u0027M\u0027 ); \u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is invalid then answer is no."}],"loc":{"start":{"line":222},"end":{"line":231}}},"loc":{"start":{"line":222},"end":{"line":231}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":232},"end":{"line":232}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":232},"end":{"line":233}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Partial Solution for First Character:","raw":"Partial Solution for First Character:"},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIs the first character of the \u003ci\u003ename\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e","raw":"\u003cbr\u003e\u003cbr\u003eIs the first character of the \u003ci\u003ename\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e"},"loc":{"start":{"line":233},"end":{"line":234}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":235},"end":{"line":235}}},"loc":{"start":{"line":233},"end":{"line":235}}},"right":{"type":"Literal","value":"\u003c/i\u003e less than \u0027M\u0027? ","raw":"\u003c/i\u003e less than \u0027M\u0027? "},"loc":{"start":{"line":233},"end":{"line":236}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT name FROM pins WHERE cc_number\u003d\u0027","raw":"\u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT name FROM pins WHERE cc_number\u003d\u0027"},"loc":{"start":{"line":233},"end":{"line":237}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":238},"end":{"line":238}}},"loc":{"start":{"line":233},"end":{"line":238}}},"right":{"type":"Literal","value":"\u0027), 1, 1) \u0026lt \u0027M\u0027 ); ","raw":"\u0027), 1, 1) \u0026lt \u0027M\u0027 ); "},"loc":{"start":{"line":233},"end":{"line":239}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is ","raw":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is "},"loc":{"start":{"line":233},"end":{"line":240}}},"right":{"type":"Literal","value":"invalid then answer is no.","raw":"invalid then answer is no."},"loc":{"start":{"line":233},"end":{"line":241}}}],"loc":{"start":{"line":232},"end":{"line":241}}},"loc":{"start":{"line":232},"end":{"line":241}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":242},"end":{"line":242}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":242},"end":{"line":243}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Another Part of Solution for First Character:","raw":"Another Part of Solution for First Character:"},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIs the first character of the \u003ci\u003ename\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e","raw":"\u003cbr\u003e\u003cbr\u003eIs the first character of the \u003ci\u003ename\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e"},"loc":{"start":{"line":243},"end":{"line":244}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":245},"end":{"line":245}}},"loc":{"start":{"line":243},"end":{"line":245}}},"right":{"type":"Literal","value":"\u003c/i\u003e less than \u0027H\u0027? ","raw":"\u003c/i\u003e less than \u0027H\u0027? "},"loc":{"start":{"line":243},"end":{"line":246}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT name FROM pins WHERE cc_number\u003d\u0027","raw":"\u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT name FROM pins WHERE cc_number\u003d\u0027"},"loc":{"start":{"line":243},"end":{"line":247}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":248},"end":{"line":248}}},"loc":{"start":{"line":243},"end":{"line":248}}},"right":{"type":"Literal","value":"\u0027), 1, 1) \u0026lt \u0027H\u0027 ); ","raw":"\u0027), 1, 1) \u0026lt \u0027H\u0027 ); "},"loc":{"start":{"line":243},"end":{"line":249}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is ","raw":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is "},"loc":{"start":{"line":243},"end":{"line":250}}},"right":{"type":"Literal","value":"invalid then answer is no.","raw":"invalid then answer is no."},"loc":{"start":{"line":243},"end":{"line":251}}}],"loc":{"start":{"line":242},"end":{"line":251}}},"loc":{"start":{"line":242},"end":{"line":251}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"hints","loc":{"start":{"line":252},"end":{"line":252}}},"property":{"type":"Identifier","name":"add"},"loc":{"start":{"line":252},"end":{"line":253}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Partial Solution for Second Character:","raw":"Partial Solution for Second Character:"},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIs the second character of the \u003ci\u003ename\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e","raw":"\u003cbr\u003e\u003cbr\u003eIs the second character of the \u003ci\u003ename\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e"},"loc":{"start":{"line":253},"end":{"line":254}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":255},"end":{"line":255}}},"loc":{"start":{"line":253},"end":{"line":255}}},"right":{"type":"Literal","value":"\u003c/i\u003e greater than \u0027k\u0027? ","raw":"\u003c/i\u003e greater than \u0027k\u0027? "},"loc":{"start":{"line":253},"end":{"line":256}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT name FROM pins WHERE cc_number\u003d\u0027","raw":"\u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT name FROM pins WHERE cc_number\u003d\u0027"},"loc":{"start":{"line":253},"end":{"line":257}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":258},"end":{"line":258}}},"loc":{"start":{"line":253},"end":{"line":258}}},"right":{"type":"Literal","value":"\u0027), 2, 1) \u0026gt \u0027k\u0027 ); ","raw":"\u0027), 2, 1) \u0026gt \u0027k\u0027 ); "},"loc":{"start":{"line":253},"end":{"line":259}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is ","raw":"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is "},"loc":{"start":{"line":253},"end":{"line":260}}},"right":{"type":"Literal","value":"invalid then answer is no.","raw":"invalid then answer is no."},"loc":{"start":{"line":253},"end":{"line":261}}}],"loc":{"start":{"line":252},"end":{"line":261}}},"loc":{"start":{"line":252},"end":{"line":261}}},{"type":"ReturnStatement","argument":{"type":"Identifier","name":"hints","loc":{"start":{"line":264},"end":{"line":264}}},"loc":{"start":{"line":264},"end":{"line":264}}}],"loc":{"start":{"line":190},"end":{"line":265}}},"code":"\nprotected List\u003cString\u003e getHints(WebSession s) {\n    List\u003cString\u003e hints \u003d new ArrayList\u003cString\u003e();\n    hints.add(\"Compound SQL statements can be made by joining multiple tests with keywords like AND and OR. Create a SQL statement that you can use as a true/false test and then select the first character of the target element and do a start narrowing down the character using \u003e and \u003c\u003cbr\u003e\u003cbr\u003eThe backend database is HSQLDB.  Keep that in mind if you research SQL functions on the Internet since different databases use some different functions and syntax.\u003cbr\u003e\u003cbr\u003eYou can find more about HSQLDB\\\u0027s SQL Syntax at \u003ca href\u003d\\\u0027http://hsqldb.org/doc/guide/ch09.html\\\u0027\u003ehttp://hsqldb.org/doc/guide/ch09.html\u003c/a\u003e.  Pay attention to the section titled \\\"String built-in Functions / Stored Procedures\\\".\");\n    hints.add(\"The application is taking your input and inserting it at the end of a pre-formed SQL command. You will need to make use of the following SQL contstructs: \u003cbr\u003e\u003cbr\u003eAND - combine the logic of the normal query with a boolean result\u003cbr\u003e\u003cbr\u003e( and ) - group subexpressions so they evaluate properly\u003cbr\u003e\u003cbr\u003eSELECT - make a subquery for your target data and get a string \u003cbr\u003e\u003cbr\u003eSUBSTRING(string, start, length) - returns a substring of string starting at the start character and going for length characters \u003cbr\u003e\u003cbr\u003e\u0026gt and \u003d and \u0026lt - once you have a character\\\u0027s value, compare it to a choosen one\u003cbr\u003e\u003cbr\u003eYou can find more about HSQLDB\\\u0027s SQL Syntax at \u003ca href\u003d\\\u0027http://hsqldb.org/doc/guide/ch09.html\\\u0027\u003ehttp://hsqldb.org/doc/guide/ch09.html\u003c/a\u003e\");\n    hints.add(\"This is the code for the query being built and issued by WebGoat:\u003cbr\u003e\u003cbr\u003e \\\"SELECT * FROM user_data WHERE userid \u003d \\\" + accountNumber \");\n    hints.add(\"Here is an example for another table:\u003cbr\u003e\u003cbr\u003eIn the table \u003ci\u003euser_data\u003c/i\u003e, is the first character of the \u003ci\u003efirst_name\u003c/i\u003e for the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e333498703333\u003c/i\u003e greater than \\\u0027M\\\u0027? \u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT first_name FROM user_data WHERE cc_number\u003d\\\u0027333498703333\\\u0027), 1, 1) \u0026gt \\\u0027M\\\u0027 ); \u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is invalid then answer is no.\");\n    hints.add(\"Partial Solution for First Character:\" + \"\u003cbr\u003e\u003cbr\u003eIs the first character of the \u003ci\u003ename\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e\" + TARGET_CC_NUM + \"\u003c/i\u003e less than \\\u0027M\\\u0027? \" + \"\u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT name FROM pins WHERE cc_number\u003d\\\u0027\" + TARGET_CC_NUM + \"\\\u0027), 1, 1) \u0026lt \\\u0027M\\\u0027 ); \" + \"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is \" + \"invalid then answer is no.\");\n    hints.add(\"Another Part of Solution for First Character:\" + \"\u003cbr\u003e\u003cbr\u003eIs the first character of the \u003ci\u003ename\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e\" + TARGET_CC_NUM + \"\u003c/i\u003e less than \\\u0027H\\\u0027? \" + \"\u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT name FROM pins WHERE cc_number\u003d\\\u0027\" + TARGET_CC_NUM + \"\\\u0027), 1, 1) \u0026lt \\\u0027H\\\u0027 ); \" + \"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is \" + \"invalid then answer is no.\");\n    hints.add(\"Partial Solution for Second Character:\" + \"\u003cbr\u003e\u003cbr\u003eIs the second character of the \u003ci\u003ename\u003c/i\u003e of the record with a \u003ci\u003ecc_number\u003c/i\u003e of \u003ci\u003e\" + TARGET_CC_NUM + \"\u003c/i\u003e greater than \\\u0027k\\\u0027? \" + \"\u003cbr\u003e\u003cbr\u003e101 AND (SUBSTRING((SELECT name FROM pins WHERE cc_number\u003d\\\u0027\" + TARGET_CC_NUM + \"\\\u0027), 2, 1) \u0026gt \\\u0027k\\\u0027 ); \" + \"\u003cbr\u003e\u003cbr\u003eIf you get back that account number is valid, then yes.  If get back that the number is \" + \"invalid then answer is no.\");\n    return hints;\n}","loc":{"start":{"line":189},"end":{"line":265}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getInstructions"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"restype":{"type":"Identifier","name":"String","loc":{"start":{"line":272},"end":{"line":272}}},"typarams":[],"params":[{"type":"Identifier","name":"s","vartype":{"type":"Identifier","name":"WebSession","loc":{"start":{"line":272},"end":{"line":272}}}}],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"instructions","vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":274},"end":{"line":274}}}},"modifiers":{"type":"Modifiers","modifiers":[],"annotations":[]},"vartype":{"type":"Identifier","name":"String","loc":{"start":{"line":274},"end":{"line":274}}},"init":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"The form below allows a user to enter an account number and determine if ","raw":"The form below allows a user to enter an account number and determine if "},"right":{"type":"Literal","value":"it is valid or not.  Use this form to develop a true / false test check other entries in the database.  ","raw":"it is valid or not.  Use this form to develop a true / false test check other entries in the database.  "},"loc":{"start":{"line":274},"end":{"line":275}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eReference Ascii Values: \u0027A\u0027 \u003d 65   \u0027Z\u0027 \u003d 90   \u0027a\u0027 \u003d 97   \u0027z\u0027 \u003d 122 ","raw":"\u003cbr\u003e\u003cbr\u003eReference Ascii Values: \u0027A\u0027 \u003d 65   \u0027Z\u0027 \u003d 90   \u0027a\u0027 \u003d 97   \u0027z\u0027 \u003d 122 "},"loc":{"start":{"line":274},"end":{"line":276}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003eThe goal is to find the value of ","raw":"\u003cbr\u003e\u003cbr\u003eThe goal is to find the value of "},"loc":{"start":{"line":274},"end":{"line":277}}},"right":{"type":"Literal","value":"the field \u003cb\u003ename\u003c/b\u003e in table \u003cb\u003epins\u003c/b\u003e for the row with the \u003cb\u003ecc_number\u003c/b\u003e of \u003cb\u003e","raw":"the field \u003cb\u003ename\u003c/b\u003e in table \u003cb\u003epins\u003c/b\u003e for the row with the \u003cb\u003ecc_number\u003c/b\u003e of \u003cb\u003e"},"loc":{"start":{"line":274},"end":{"line":278}}},"right":{"type":"Identifier","name":"TARGET_CC_NUM","loc":{"start":{"line":279},"end":{"line":279}}},"loc":{"start":{"line":274},"end":{"line":279}}},"right":{"type":"Literal","value":"\u003c/b\u003e.  The field is of type varchar, which is a string.","raw":"\u003c/b\u003e.  The field is of type varchar, which is a string."},"loc":{"start":{"line":274},"end":{"line":280}}},"right":{"type":"Literal","value":"\u003cbr\u003e\u003cbr\u003ePut the discovered name in the form to pass the lesson.  Only the discovered name ","raw":"\u003cbr\u003e\u003cbr\u003ePut the discovered name in the form to pass the lesson.  Only the discovered name "},"loc":{"start":{"line":274},"end":{"line":281}}},"right":{"type":"Literal","value":"should be put into the form field, paying close attention to the spelling and capitalization.","raw":"should be put into the form field, paying close attention to the spelling and capitalization."},"loc":{"start":{"line":274},"end":{"line":282}}},"loc":{"start":{"line":274},"end":{"line":282}}},{"type":"ReturnStatement","argument":{"type":"Identifier","name":"instructions","loc":{"start":{"line":284},"end":{"line":284}}},"loc":{"start":{"line":284},"end":{"line":284}}}],"loc":{"start":{"line":273},"end":{"line":285}}},"code":"\npublic String getInstructions(WebSession s) {\n    String instructions \u003d \"The form below allows a user to enter an account number and determine if \" + \"it is valid or not.  Use this form to develop a true / false test check other entries in the database.  \" + \"\u003cbr\u003e\u003cbr\u003eReference Ascii Values: \\\u0027A\\\u0027 \u003d 65   \\\u0027Z\\\u0027 \u003d 90   \\\u0027a\\\u0027 \u003d 97   \\\u0027z\\\u0027 \u003d 122 \" + \"\u003cbr\u003e\u003cbr\u003eThe goal is to find the value of \" + \"the field \u003cb\u003ename\u003c/b\u003e in table \u003cb\u003epins\u003c/b\u003e for the row with the \u003cb\u003ecc_number\u003c/b\u003e of \u003cb\u003e\" + TARGET_CC_NUM + \"\u003c/b\u003e.  The field is of type varchar, which is a string.\" + \"\u003cbr\u003e\u003cbr\u003ePut the discovered name in the form to pass the lesson.  Only the discovered name \" + \"should be put into the form field, paying close attention to the spelling and capitalization.\";\n    return (instructions);\n}","loc":{"start":{"line":272},"end":{"line":285}}},{"type":"VariableDeclarator","id":{"type":"Identifier","name":"DEFAULT_RANKING","vartype":{"type":"Identifier","name":"Integer","loc":{"start":{"line":287},"end":{"line":287}}}},"modifiers":{"type":"Modifiers","modifiers":["private","static","final"],"annotations":[]},"vartype":{"type":"Identifier","name":"Integer","loc":{"start":{"line":287},"end":{"line":287}}},"init":{"type":"NewExpression","typeargs":[],"callee":{"type":"Identifier","name":"Integer","loc":{"start":{"line":287},"end":{"line":287}}},"arguments":[{"type":"Literal","value":95,"raw":95}],"loc":{"start":{"line":287},"end":{"line":287}}},"loc":{"start":{"line":287},"end":{"line":287}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getDefaultRanking"},"modifiers":{"type":"Modifiers","modifiers":["protected"],"annotations":[]},"restype":{"type":"Identifier","name":"Integer","loc":{"start":{"line":289},"end":{"line":289}}},"typarams":[],"params":[],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"ReturnStatement","argument":{"type":"Identifier","name":"DEFAULT_RANKING","loc":{"start":{"line":291},"end":{"line":291}}},"loc":{"start":{"line":291},"end":{"line":291}}}],"loc":{"start":{"line":290},"end":{"line":292}}},"code":"\nprotected Integer getDefaultRanking() {\n    return DEFAULT_RANKING;\n}","loc":{"start":{"line":289},"end":{"line":292}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"getTitle"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"restype":{"type":"Identifier","name":"String","loc":{"start":{"line":299},"end":{"line":299}}},"typarams":[],"params":[],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"ReturnStatement","argument":{"type":"Literal","value":"Blind String SQL Injection","raw":"Blind String SQL Injection"},"loc":{"start":{"line":301},"end":{"line":301}}}],"loc":{"start":{"line":300},"end":{"line":302}}},"code":"\npublic String getTitle() {\n    return (\"Blind String SQL Injection\");\n}","loc":{"start":{"line":299},"end":{"line":302}}},{"type":"FunctionDeclaration","id":{"type":"Identifier","name":"handleRequest"},"modifiers":{"type":"Modifiers","modifiers":["public"],"annotations":[]},"restype":{"type":"PrimitiveType"},"typarams":[],"params":[{"type":"Identifier","name":"s","vartype":{"type":"Identifier","name":"WebSession","loc":{"start":{"line":310},"end":{"line":310}}}}],"thrown":[],"body":{"type":"BlockStatement","body":[{"type":"TryStatement","handlers":[{"type":"CatchClause","param":{"type":"Identifier","name":"e","vartype":{"type":"Identifier","name":"Exception","loc":{"start":{"line":316},"end":{"line":316}}}},"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"System","loc":{"start":{"line":318},"end":{"line":318}}},"property":{"type":"Identifier","name":"out"},"loc":{"start":{"line":318},"end":{"line":318}}},"property":{"type":"Identifier","name":"println"},"loc":{"start":{"line":318},"end":{"line":318}}},"arguments":[{"type":"BinaryExpression","operator":"PLUS","left":{"type":"Literal","value":"Exception caught: ","raw":"Exception caught: "},"right":{"type":"Identifier","name":"e","loc":{"start":{"line":318},"end":{"line":318}}},"loc":{"start":{"line":318},"end":{"line":318}}}],"loc":{"start":{"line":318},"end":{"line":318}}},"loc":{"start":{"line":318},"end":{"line":318}}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"e","loc":{"start":{"line":319},"end":{"line":319}}},"property":{"type":"Identifier","name":"printStackTrace"},"loc":{"start":{"line":319},"end":{"line":319}}},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"System","loc":{"start":{"line":319},"end":{"line":319}}},"property":{"type":"Identifier","name":"out"},"loc":{"start":{"line":319},"end":{"line":319}}}],"loc":{"start":{"line":319},"end":{"line":319}}},"loc":{"start":{"line":319},"end":{"line":319}}}],"loc":{"start":{"line":317},"end":{"line":320}}},"loc":{"start":{"line":316},"end":{"line":320}}}],"block":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","typeargs":[],"callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"super","loc":{"start":{"line":314},"end":{"line":314}}},"property":{"type":"Identifier","name":"handleRequest"},"loc":{"start":{"line":314},"end":{"line":314}}},"arguments":[{"type":"Identifier","name":"s","loc":{"start":{"line":314},"end":{"line":314}}}],"loc":{"start":{"line":314},"end":{"line":314}}},"loc":{"start":{"line":314},"end":{"line":314}}}],"loc":{"start":{"line":313},"end":{"line":315}}},"loc":{"start":{"line":312},"end":{"line":320}}}],"loc":{"start":{"line":311},"end":{"line":321}}},"code":"\npublic void handleRequest(WebSession s) {\n    try {\n        super.handleRequest(s);\n    } catch (Exception e) {\n        System.out.println(\"Exception caught: \" + e);\n        e.printStackTrace(System.out);\n    }\n}","loc":{"start":{"line":310},"end":{"line":321}}}],"loc":{"start":{"line":54},"end":{"line":322}}}],"loc":{"start":{"line":1},"end":{"line":322}},"sourcefile":"/Users/gli/codiscope/jacks.engine/WebGoat-5.4/WEB-INF/classes/org/owasp/webgoat/lessons/BlindStringSqlInjection.java"}